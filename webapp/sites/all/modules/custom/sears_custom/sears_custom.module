<?php
/**
 *  * @file
 * Implements hook_variable_info().
 *
 * @param array $options
 *
 * @return array
 */
if (!defined('DEVCONNECT_ADMIN_NOTIFY_SUBJECT')) {
	define('DEVCONNECT_ADMIN_NOTIFY_SUBJECT', t('Account details for !user_name at !site'));
}

if (!defined('DEVCONNECT_ADMIN_NOTIFY_BODY')) {
	define('DEVCONNECT_ADMIN_NOTIFY_BODY', t("!user_name (!user_view) has !action account.\n\nEdit user: !user_edit\n\nDelete User: !user_delete\n\nUser Status: !approved\n\n"));
}
function sears_custom_variable_info($options) {
  $variables['default_apiproduct'] = array(
    'type' => 'string',
    'title' => t("Devconnect Default ApiProduct"),
    'description' => t('Add Default ApiProduct name with prefix prod-. e.g prod-apiproduct')
  );
  return $variables;
}


/**
 * Implements hook_init().
 */
function sears_custom_init() {
  if (variable_get('default_apiproduct', '')) {
	drupal_add_css('div.form-item-api-product{display:none;}', array(
	'group' => CSS_THEME,
	'type' => 'inline'
			));
  }
}

/**
 * Implements hook_form_alter() (http://api.drupal.org/api/drupal/modules!system!system.api.php/function/hook_form_alter/7)
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function sears_custom_form_alter(&$form, &$form_state, $form_id) {  
  switch ($form_id) {
    case "user_profile_form":
      $form['field_api_key']['#access'] = FALSE;
      break;
    case "user_register_form":
      $form['field_api_key']['#access'] = FALSE;
      break; 
    case "search_block_form":
        $form['actions']['submit'] = array(
            '#type' => 'submit', 
            '#value' => 'Search',
            '#prefix' => '<div class="wrap-button">', 
            '#suffix' => '</div>',            
        ); 
        break;
    case 'user_login_block':
      $form['#validate'][] = 'user_login_block_redirect';
      break;   
    default:
        break; 
  }
}

function user_login_block_redirect($form, &$form_state) {
  $form = form_get_error($form['name']) . form_get_error($form['pass']);
  if($form != '') {
    $_GET['destination'] = 'user/login';
    drupal_goto('user/login');    
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * When creating a new app, check to see if user has created an app before,
 * and choose a default API Product based on the result.
 *
 * @throws Exception
 *
 * @param array $form
 * @param array $form_state
 */
function sears_custom_form_devconnect_developer_apps_edit_form_alter(&$form, &$form_state) {
  global $user;


  if (isset($form['existing_machine_name'])) {
      drupal_set_title('Edit your Application');
      $form['actions']['submit']['#value'] = 'Save Application';
      $form['existing_machine_name']['#title'] = "Application Name";                    
  }
  else {
      drupal_set_title('Create your Application');
      $form['actions']['submit']['#value'] = 'Set Up Application';     
      $form['machine_name']['#title'] = "Application Name";       
  }
  
  $form['intro_text'] = array(
    '#markup' => '<p>Short description answering the following questions: How is application defined? Why is the user creating an Application name? What is the purpose or value of this page?</p><h2>Tell us about your application</h2>',
    '#weight' => -50
  );
  
  $form['api_product']['#access']=FALSE;

  $existing_default_apiproduct = $form['api_product']['#default_value'];
  // Default API Product may contain the empty string. Ignore this.
  if (!is_array($existing_default_apiproduct)) {
    $existing_default_apiproduct = NULL;
  }
  elseif (($i = array_search('', $existing_default_apiproduct)) !== FALSE) {
    unset($existing_default_apiproduct[$i]);
  }
  // Do not meddle with api_product if we are editing as opposed to creating an app.
  // Existing apps will have an existing default for this.
  if (empty($existing_default_apiproduct)) {
    $form['api_product']['#default_value'] = variable_get('default_apiproduct', NULL);
  }

  // Override custom attribute feild types
  $custom_attributes = module_invoke_all('devconnect_app_attributes');

  foreach ($custom_attributes as $machine_name => $attribute) {
    $options=(array_key_exists('options', $attribute) ? $attribute['options'] : NULL);
    $form_field_name = 'attribute_' . $machine_name;
    if ($options) {
      $form[$form_field_name]['#options'] = $options;
    }
  }
  $form['callback_url']['#access'] = FALSE;
  $form['callback_url']['#required'] = FALSE;
  

  
  $cancel_link_options = array(
    'attributes' => array(
        'class' => 'btn form-submit cta-cancel'
    )
  );
  
  $form['actions']['cancel'] = array(
      '#markup' => l(t('Cancel'), 'user/'.$user->uid.'/apps/', $cancel_link_options),
      '#weight' => '1000'
  );
}

function sears_custom_devconnect_app_attributes() {
  //$attributes = variable_get('app_attributes', array());

  $items = array();
  $items['description']   = array(
      'name'    => t('Description'),
      'type'    => 'textarea',
      'required'    => TRUE,
      'weight' => 7,
  );
  $items['application_type']   = array(
      'name'    => t('What kind of application will it be?'),
      'type'    => 'radios',
      'options' => array(
        'web' => t('Web application'),
        'desktop'  => t('Desktop client')
      ),
      'default' => 'web',
      'weight' => 8,
  );
  $items['access_type']   = array(
      'name'    => t('What kind of access will you need for your application?'),
      'type'    => 'radios',
      'options' => array(
        'readonly' => t('Read-only'),
        'readwrite'  => t('Read-write')
      ) ,
       'default' => 'readonly',
      'weight' => 9,      
  );
  return $items;
}
/**
 * Implements hook_user_presave().
 *
 * When account is creating creating an app with the same username 
 * and choose a default API Product based on the result.
 */
function sears_custom_user_insert(&$edit, $account, $category) {
  $uid=$account->uid;
  $user=user_load($uid);
  $dc = new DevConnectApigeeDeveloperApp($user);
  $default_api_product = variable_get('default_apiproduct', NULL);
  $app_array=array(
    'machine_name' => $user->name,
     'callback_url' => '',
     'attribute_application_type' => 'web',
    'attribute_access_type' => 'readonly',
    'api_product' => $default_api_product,
    'uid' => $uid,
  );
  try{
    $results = $dc->Create($app_array);
  }catch (Exception $e) {
  	$message = $e->getMessage();
  	watchdog('devconnect_developer_apps', $message, array(), WATCHDOG_ERROR);
  }
}
function sears_custom_mail_alter(&$message) {
 if ($message['id']=='user_status_activated'){
  $to=$message['to'];
  $uid=$message['params']['account']->uid;
  $user=user_load($uid);
  $params = $message['params'];
  $dc = new DevConnectApigeeDeveloperApp($user);
  $key=strip_tags(devconnect_developer_apps_detail($user, $user->name));
  $consumer_key=explode('Consumer Key:', $key);
  $consumer_key=explode('Consumer Secret Key', $consumer_key[1]);
  $consumer_key=trim($consumer_key[0]);
  $patterns = array();
  $patterns[0] = '/{APIKEY}/';
  $replacements[0] = $consumer_key;
  $message['body'][0]=preg_replace($patterns, $replacements, $message['body'][0]);
 }
 if ($message['id']=='user_register_pending_approval_admin'){
 	$message['body'] = array();
 	$params = $message['params'];
 	$uaccount = $params['account'];
 	$action = 'applied for an account';
 	$variables = _sears_admin_notify_get_variables($uaccount, $action);	
 	$message['subject'] = t(variable_get('devconnect_admin_notify_subject', DEVCONNECT_ADMIN_NOTIFY_SUBJECT), $variables);
 	$body = t(variable_get('devconnect_admin_notify_body', DEVCONNECT_ADMIN_NOTIFY_BODY), $variables);
 	$message['body'] [] = token_replace($body, array('user' => $uaccount));
 }
 

}
/**
* Implements hook_devconnect_user_save
* If the gateway comunication is failed rollback account creation
* @param $results
* @param $edit
* @param $account
*
*/
function sears_custom_devconnect_user_save($results, &$edit, $account) {
  if ( (user_is_anonymous()) && ($results['code']!=201) ) {
    watchdog('sears_register_error', "<pre> Unable to process registeration request for $account->mail. $account->mail try to submit the following data<br>" . print_r($account, TRUE) , array(), WATCHDOG_ERROR);
    drupal_set_message( t("An error occurred while processing your request and did not submitted the data. Please try again later") , 'error' , FALSE);
    drupal_goto(current_path() );
    exit();
  }
}
/**
*
* implements hook_block_info
*
*/
function sears_custom_block_info() {    
  $blocks['blog_login'] = array(
    // info: The name of the block.
    'info' => t('Login blog'),
  );
   $blocks['forum_login'] = array(
    // info: The name of the block.
    'info' => t('Login forum'),
  );
  $blocks['blog_subscribe'] = array(
    // info: The name of the block.
    'info' => t('blog subscribe'),
  );


  return $blocks;
}
function sears_custom_block_view($delta = '') {
  global $user;
  switch ($delta) {
    case 'blog_login':
      // Create your block content here
      if ($user->uid==0) {
        $block['subject'] = t('Sign In To Comment');
        $block['content'] = "You are not currently signed in [ <a href='/user/login'>Sign In </a>]";
    }else{

      $block['content'] = "You are currently signed in [ <a href='/user/logout'>Sign Out </a> ]";
    }
      break;
    case 'forum_login':
    if ($user->uid==0) {
        $block['subject'] = '';
        $block['content'] = "<a href='/user/login'>Sign In To Post New Topic </a>";
    }else{

      $block['content'] = "<a href='/node/add/forum'>Add A Forum Post</a> ";
    }
    break;
    case 'blog_subscribe':
      $url=$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
      $block['subject'] = '';
      $block['content'] = "<p><b>Subscribe to this Blog</b></p><a href=https://delicious.com/save?url=$url target='_blank'><img alt='Delicious' src=http://w.sharethis.com/images/delicious_16.png></a> <a href=http://www.stumbleupon.com/submit?url=$url target='_blank'><img alt='Delicious' src='http://w.sharethis.com/images/stumbleupon_16.png'></a> <a href=https://ssl.reddit.com/login?dest=$url target='_blank'><img alt='Stumble Upon' src='http://w.sharethis.com/images/reddit_16.png'></a> <a href=http://digg.com/submit?phase=2&amp;url=$url target='_blank'><img alt='Digg' src=http://w.sharethis.com/images/digg_16.png></a> <a href=https://twitter.com/intent/tweet?url=$url><img alt='Reddit' src=http://w.sharethis.com/images/twitter_16.png></a> <a href=https://www.facebook.com/sharer/sharer.php?u=$url target='_blank'><img alt='Twitter' src=http://w.sharethis.com/images/facebook_16.png></a></div>";
    break;
  }

  return $block;
}
/**
 * Generates the token values used in the mail.
 *
 * @param stdClass $uaccount
 * @param string $action
 * @return array
 */
function _sears_admin_notify_get_variables($uaccount, $action) {
	global $base_url;
	$variables['!user_name'] = isset($uaccount->realname) ? $uaccount->realname : $uaccount->name;
	$variables['!user_mail'] = $uaccount->mail;
	$variables['!user_view'] = url('user/' . $uaccount->uid, array('absolute' => TRUE));
	$variables['!user_edit'] = url('user/' . $uaccount->uid . '/edit', array('absolute' => TRUE));
	$variables['!user_delete'] = url('user/' . $uaccount->uid . '/delete', array('absolute' => TRUE));
	$variables['!approved'] = $uaccount->status ? 'approved' : 'blocked';
	$variables['!site'] = variable_get('site_name', 'Drupal');
	$variables['!user_uid'] = $uaccount->uid;
	$variables['!uri'] = $base_url;
	$variables['!uri_brief'] = drupal_substr($base_url, drupal_strlen('http://'));
	$variables['!date'] = format_date(REQUEST_TIME);
	$variables['!action'] = check_plain($action);
	$variables['!user_first_name'] = $uaccount->field_first_name[LANGUAGE_NONE][0]['value'];
	$variables['!user_last_name'] = $uaccount->field_last_name[LANGUAGE_NONE][0]['value'];
	$variables['!user_company'] = $uaccount->field_company_name[LANGUAGE_NONE][0]['value'];
	$variables['!user_company_url'] = $uaccount->field_company_site_url[LANGUAGE_NONE][0]['value'];
	return $variables;
}




function sears_custom_form_user_register_form_alter(&$form, &$form_state, $form_id) {
    drupal_set_title('Account Registration');     
    
    $form['intro_text'] = array(
      '#markup' => '<p>Your account will be active within 24-48 hours of registration and an API key will be issued to you upon approval. </p><h2>Tell us about yourself</h2>',
      '#weight' => -99
    );    
    
    $form['account']['mail'] = array();
    $form['account']['mail']['#weight'] = -96;
    
    $form['field_company_name']['#weight'] = -95;
    
    $form['mail'] = array(
        '#type'     => 'textfield',
        '#title'    => 'E-mail Address',
        '#maxlength'=> 254,
        '#description' => null,
        '#required' => 1,
        '#default_value' => null,
        '#weight'   => -96
    );
       
    $form['account']['intro_text'] = array(
      '#markup' => '<h2>Your Username and Password</h2>',
      '#weight' => -11
    );    
    
    $form['field_terms_and_conditions']['und']['#title'] = l(t("Agree to Terms and Conditions"), 'terms-use', array(
        'attributes' => array(
                'target' => '_blank',
            ),
    ));
    
    $form['actions']['submit']['#value'] = 'Register';
    
    // print("<pre>");
    // print_r($form);
    // print("</pre>");
}
